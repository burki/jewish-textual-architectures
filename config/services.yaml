# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.locales: ['de', 'en']
    locales: ['de', 'en']        # without app. prefix for TeiEditionBundle
    app.default_locale: 'de'
    default_locale: 'de' # without app. prefix for TeiEditionBundle
    app.hosts.de: "%env(string:HOSTS_DE)%"
    app.hosts.en: "%env(string:HOSTS_EN)%"

    app.site.key: 'jta'
    app.site.name: "Jewish Textual Architectures"
    app.site.byline: "Jewish Spaces, Places, and Architectures in Literature. Online Anthology"
    app.site.publisher: "Institute for the History of the German Jews"
    app.site.email: 'info@juedische-geschichte-online.net'
    app.site.matomo.id: "%env(string:SITE_MATOMO_ID)%"
    app.site_theme: null
    app.public_dir: '%kernel.project_dir%/public'
    app.zotero.options:
        api-key: "%env(string:ZOTERO_API_KEY)%"
    app.xsl_converter.saxonc_enable: "%env(bool:SAXONC_ENABLE)%"
    app.xsl_converter_adapter.arguments: "%env(string:JAVA_BIN)% -jar %kernel.project_dir%/bin/saxon9he.jar -s:%%source%% -xsl:%%xsl%% %%additional%%"
    # imagemagick settings
    app.imagemagick.processor.arguments:
        # on linux, check with
        #   which convert -> /usr/bin/convert
        # on windows, set IMAGEMAGICK_PATH to your proper path,
        #   e.g. "C:/Progra~1/ImageMagick-7.1.0/"
        path: "%env(string:IMAGEMAGICK_PATH)%"
    app.pdf-generator.arguments:
        tempDir: "%kernel.project_dir%/var/cache/mpdf"
        fontDir: [ "%kernel.project_dir%/data/font" ]
        fontdata:
            book_typeface:
                R: 'NotoSerif-Regular.ttf'
                B: 'NotoSerif-Bold.ttf'
                I: 'NotoSerif-Italic.ttf'
                BI: 'NotoSerif-BoldItalic.ttf'
        default_font: book_typeface
    # for testing (https://doi.test.datacite.org/), use
    app.datacite.url: "https://mds.test.datacite.org/" # see https://support.datacite.org/docs/testing-guide
    # app.datacite.url: " https://mds.datacite.org/" # production
    app.datacite.user: SUBGOE.IGDJ
    app.datacite.password: ~
    app.datacite.prefix: 10.23691
    app.datacite.funding: '
        <fundingReferences>
          <fundingReference>
            <funderName>Deutsche Forschungsgemeinschaft</funderName>
            <funderIdentifier funderIdentifierType="Crossref Funder ID">http://dx.doi.org/10.13039/501100001659</funderIdentifier>
            <awardNumber awardURI="https://gepris.dfg.de/gepris/projekt/497336599">497336599</awardNumber>
            <awardTitle>Konstruktionen j√ºdischen Kulturerbes in theoretisch-kritischen und literarischen Texten zu Architektur und Raum</awardTitle>
          </fundingReference>
        </fundingReferences>'

    #app.wordpress.url: 'https://diaspora.juedische-geschichte-online.net/cms/'

    env(FEATURE_LIMITED_NAVIGATION_ENV): true  # default to limited functionality
    # except in /vorschaue, where FEATURE_LIMITED_NAVIGATION_ENV=0
    app.limited_navigation: '%env(bool:FEATURE_LIMITED_NAVIGATION_ENV)%'

    jms_i18n_routing.hosts.de: "%env(string:SITE_HOST)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $publicDir: '%app.public_dir%'
            $siteTheme: '%app.site_theme%'
            $dbconnAdmin: '@dbconn.admin'
            #$wordpressBaseUrl: '%app.wordpress.url%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # makes classes in TeiEditionBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # TODO: expose this in bundle configuration: https://symfony.com/doc/current/bundles/extension.html
    TeiEditionBundle\:
        resource: '%kernel.project_dir%/vendor/igdj/tei-edition-bundle'
        exclude: '%kernel.project_dir%/vendor/igdj/tei-edition-bundle/{Entity,Migrations,Tests}'

    dbconn.admin:
        class: Doctrine\DBAL\Connection
        factory: Doctrine\DBAL\DriverManager::getConnection
        arguments:
            $params:
                url: '%env(resolve:ADMIN_DATABASE_URL)%'

    # override command in bundle, see https://stackoverflow.com/a/57107379
    App\Command\ArticleRefreshCommand:
        decorates: TeiEditionBundle\Command\ArticleRefreshCommand

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # The following is now registered by twig/extra-bundle
    # Twig\Extra\String\StringExtension:
    #    tags:
    #        - { name: twig.extension }

    Armin\ScssphpBundle\Twig\AssetExtension:
        arguments:
            $scssParser: '@scssphp.parser'
        tags:
            - { name: twig.extension }

    # So we can inject @solr.client, see https://github.com/floriansemm/SolrBundle/issues/191#issuecomment-466101623
    FS\SolrBundle\SolrInterface: '@solr.client'

    # language-specific layout in 404
    App\EventListener\LanguageListener:
       arguments: [ '%jms_i18n_routing.default_locale%', '%jms_i18n_routing.locales%', '@jms_i18n_routing.locale_resolver' ]
       tags:
          - { name: kernel.event_listener, event: kernel.exception, method: setLocale }

    App\Service\ZoteroApiService:
        arguments:
            $options: "%app.zotero.options%"

    app.xsl_converter.commandline_adapter:
        class: TeiEditionBundle\Utils\Xsl\XsltCommandlineAdapter
        arguments: [ '%app.xsl_converter_adapter.arguments%', { xslpath: '%kernel.project_dir%/data/styles' } ]

    app.xsl_converter.saxonc_adapter:
        class: TeiEditionBundle\Utils\Xsl\XsltSaxonProcessorAdapter

    TeiEditionBundle\Utils\Xsl\XsltProcessor:
        calls:
            - [ setAdapter, [ "@= parameter('app.xsl_converter.saxonc_enable') ? service('app.xsl_converter.saxonc_adapter') : service('app.xsl_converter.commandline_adapter')" ]]

    TeiEditionBundle\Utils\ImageMagick\ImageMagickProcessor:
        arguments: [ "%app.imagemagick.processor.arguments%" ]

    TeiEditionBundle\Utils\PdfGenerator:
        arguments: [ "%app.pdf-generator.arguments%" ]

    App\Menu\Builder:
        arguments: [ "@knp_menu.factory", "@translator.default", "@request_stack", "@router"  ]
        tags:
            # The alias is what is used to retrieve the menu
            - { name: knp_menu.menu_builder, method: createTopMenu, alias: top }
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
            - { name: knp_menu.menu_builder, method: createBreadcrumbMenu, alias: breadcrumb }
            - { name: knp_menu.menu_builder, method: createFooterMainMenu, alias: footer-main }
